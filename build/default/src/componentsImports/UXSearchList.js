import{util}from"./util01.js";import{components}from"./components01.js";import{UXDataList}from"./UXDataList.js";import{UXButtonScroll}from"./UXButtonScroll.js";var controls;;(function(ns,UXDataList,$){"use strict";ns.UXSearchList=function(){return function(options){//Si no estubiera definida la propiedad textTemplate entonces
//no va a iniciar el initevent desde components01.js, por tanto
//tenemos que lanzarlo nosotros manualmente.
var params=[].slice.call(arguments);if(0<params.length){this.initControl.apply(this,params)}}}();ns.UXSearchList.prototype=new UXDataList;ns.UXSearchList.prototype.initControl=function(options){console.log("estoy en UXSearchList initControl");(function(options){options.id=options.id||void 0;options.containerComponent=options.containerComponent||".panel-datalist";options.data=options.data||void 0;options.nameblock=options.nameblock||".group-block";options.namefield=options.namefield||"#busquedatxt";options.namedatalist=options.namedatalist||".datalist";options.namebutton=options.namebutton||"#search";options.namebuttonclose=options.namebuttonclose||"#btn-slide-close01";options.inputText=options.inputText||"#busquedatxt";options.onButtonClick=options.onButtonClick||void 0;options.onClose=options.onClose||void 0;options.onSearch=options.onSearch||void 0})(options);//renombramos el datalist
var id=options.id,namedatalist=id+"datalist";$("#"+id+" "+options.namedatalist).get(0).id=namedatalist;//******************************** */
options.container="#"+namedatalist+" "+options.containerComponent;//********************************* */
this.$inputText=void 0;this.init(options);this.initEventInputSearch(options);//Si no estubiera definida la propiedad textTemplate entonces
//no va a iniciar el initevent desde components01.js, por tanto
//tenemos que lanzarlo nosotros manualmente. 
if(!this.options.textTemplate&&this.initevent){this.initevent(options)}};ns.UXSearchList.prototype.initEventInputSearch=function(options){var self=this;console.log("estoy dentro de UXSearchList initeventinputsearch");self.eventbuttons();var scroll;let id=self.options.id,$inputText="#"+id+" "+self.options.inputText;console.dir(self.options.data);const datos=self.options.data;/*
        const datospagina=Enumerable.from(datos.grupos)
                        //.take(index*pagerow)
                        .skip(pageindex*pagerow)
                        .take(pagerow)
                        .select("$").toArray();
        */$($inputText).on("keydown",function(e){});$($inputText).on("keyup",debounce(function(e){let datoscombo;console.dir(self.options.data[id]);console.log(self.$inputText.val());if(0<$($inputText).val().length){if(self.options.onSearch){datoscombo=self.options.onSearch(datos,self.$inputText.val(),id)}self.open()}else{datoscombo=datos;self.close()}if(self.opened()){console.log("estoy dentro de opened");let timer1=setTimeout(()=>{scroll=new UXButtonScroll({id:id+"datalist",onItemClick:function(value,target){console.dir(target);//console.log("estoy dentro de onItemClick")
self.$inputText.val(value);self.toggle();scroll.destroy()}});clearTimeout(timer1)},50)}else scroll.destroy();self.setData(datoscombo,self.options.id,self.options.textTemplate)},300))};function debounce(func,wait,immediate){var timeout;return function(){var context=this,args=arguments,later=function(){timeout=null;if(!immediate)func.apply(context,args)},callNow=immediate&&!timeout;clearTimeout(timeout);timeout=setTimeout(later,wait);if(callNow)func.apply(context,args)}};})(controls=controls||{},UXDataList,jQuery);export{controls};if(!window.controls)window.controls={};util.addNameSpace(window.controls,controls);